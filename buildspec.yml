version: 0.2
phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - echo "Installing dependencies..."
      - pip install -r requirements.txt -t lib

  build:
    commands:
      - echo "Zipping deployment package..."
      - cd lib
      - zip -r9 ../deployment_package.zip .
      - cd ..
      - zip -g deployment_package.zip lambda_function.py

      # Additional build steps
      - echo "Running unit tests..."
      - python -m unittest discover tests/

  pre_deploy:
    commands:
      - echo "Linting code..."
      - pylint lambda_function.py
      - echo "Running security scan..."
      - bandit -r lambda_function.py

  deploy_staging:
    commands:
      - echo "Deploying to staging environment..."
      - aws lambda update-function-code --function-name githubtolambda-staging --zip-file fileb://deployment_package.zip
      - aws lambda publish-version --function-name githubtolambda-staging
      - echo "Staging deployment completed."

  deploy_production:
    commands:
      - echo "Deploying to production environment..."
      - aws lambda update-function-code --function-name githubtolambda-production --zip-file fileb://deployment_package.zip
      - aws lambda publish-version --function-name githubtolambda-production
      - echo "Production deployment completed."

  post_build:
    commands:
      - echo "Cleaning up..."
      - rm -rf lib/  # Clean up the temporary library directory
      - rm deployment_package.zip  # Clean up the deployment package
      - echo "Cleanup completed."
